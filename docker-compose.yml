services:
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_BACK_URL=/api
        - REACT_APP_BOT_USERNAME=${BOT_USERNAME}
    ports:
      - "80"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    ports:
      - "8000"
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BOT_TOKEN=${BOT_TOKEN}
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  telegram_bot:
    build:
      context: ./src/telegram_bot
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379 
      - BOT_TOKEN=${BOT_TOKEN}
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - app-network

  redis:
    image: redis
    ports:
      - "6379"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./src/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
      - postgres
      - redis
      - telegram_bot
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
